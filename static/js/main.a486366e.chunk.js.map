{"version":3,"sources":["components/AddComponent/AddComponent.js","components/AddComponent/constants.js","components/Cards/Cards.js","components/List/List.js","constants/actionTypes.js","actions/index.js","containers/List/List.js","components/Board/Board.js","containers/Board/Board.js","App.js","reducers/index.js","reducers/lists.js","reducers/newlist.js","store.js","index.js"],"names":["AddComponent","_this$props","this","props","isFromList","isShowForm","onToggleForm","onAddClick","inVal","refs","cardInpt","react_default","a","createElement","className","href","onClick","type","ref","Button","bsStyle","value","Component","Cards","onDragStart","e","id","pid","dataTransfer","dropEffect","effectAllowed","setData","_this","dragStart","onDragEnd","dragEnd","onDrop","dropCard","getData","fromListIdx","dragEnter","_this2","cards","isDragOver","dragLeave","onDragOver","preventDefault","onDragEnter","map","ele","idx","isDragging","draggable","key","title","List","lists","addCard","toggleForm","name","cardCount","components_Cards_Cards","prevPid","newPid","components_AddComponent_AddComponent","showAddCardForm","val","TOGGLE_CARD_FORM","TOGGLE_LIST_FORM","ADD_CARD","ADD_LIST","DRAG_START","DRAG_END","DRAG_ENTER","DROP_CARD","nextListId","nextCardId","toggleListForm","connect","store","dispatch","payload","cid","Board","showForm","addList","Grid","fluid","Row","containers_List_List","isForNewList","newlist","App","containers_Board_Board","combineReducers","state","arguments","length","undefined","action","Object","objectSpread","push","desc","toConsumableArray","concat","index","prev","card","splice","createStore","reducer","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.a486366e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'react-bootstrap';\r\nimport './AddComponent.css';\r\nimport { LIST_ADD, CARD_ADD } from './constants';\r\n\r\nclass AddComponent extends Component {\r\n  render(){\r\n    const { isFromList, isShowForm, onToggleForm, onAddClick, } = this.props;\r\n    let inVal = this.refs.cardInpt;\r\n    return (\r\n      <div className=\"column\">\r\n        <div className=\"content\">\r\n          <div className={\"linkWrapper \" + (isShowForm && 'hide')}>\r\n            <a href=\"#\" onClick={() => (onToggleForm()) }>{!isFromList && LIST_ADD}{isFromList && CARD_ADD}</a>\r\n          </div>\r\n          <div className={\"formWrapper \" + (!isShowForm && 'hide')}>\r\n            <form className=\"form\">\r\n              <div className=\"form-group\">\r\n                <input type=\"text\" ref=\"cardInpt\" className=\"form-control\" />\r\n              </div>\r\n              <Button bsStyle=\"primary\" className=\"pull-left\" onClick={() => {onAddClick(inVal.value); inVal.value = \"\"}}>Add List</Button>\r\n              <Button bsStyle=\"danger\" className=\"pull-right\" onClick={() => (onToggleForm()) }>Cancel</Button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nAddComponent.propTypes = {\r\n  isFromList: PropTypes.bool,\r\n  isShowForm: PropTypes.bool,\r\n  onToggleForm: PropTypes.func,\r\n  onAddClick: PropTypes.func,\r\n};\r\n\r\nexport default AddComponent;\r\n","export const LIST_ADD = \"Add New List\";\r\nexport const CARD_ADD = \"Add New Card\";\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Cards extends Component {\r\n  onDragStart = (e, id, pid) => {\r\n    e.dataTransfer.dropEffect = 'copy';\r\n    e.dataTransfer.effectAllowed = 'copyMove';\r\n    e.dataTransfer.setData(\"id\", id);\r\n    e.dataTransfer.setData(\"prevPid\", pid);\r\n    this.props.dragStart(id, pid);\r\n  }\r\n\r\n  onDragEnd = (e, id, pid) => {\r\n    this.props.dragEnd(id, pid);\r\n  }\r\n\r\n  onDrop = (e) => {\r\n    //alert('same')\r\n    this.props.dropCard(e.dataTransfer.getData(\"id\"), e.dataTransfer.getData(\"prevPid\"), this.props.fromListIdx);\r\n  }\r\n\r\n  dragEnter = (e) => {\r\n    this.props.dragEnter(this.props.fromListIdx);\r\n  }\r\n\r\n  render() {\r\n    const { cards, fromListIdx, dropCard, dragLeave, dragEnter, isDragOver } = this.props;\r\n    return (\r\n      <div className=\"cards\" onDragOver={(e) => (e.preventDefault())} onDrop={(e) => (this.onDrop(e))}\r\n        onDragEnter={(e) => (this.dragEnter(e))}>\r\n        {cards.map((ele, idx) =>\r\n          (\r\n            <a className={\"card \" + (ele.isDragging && 'dragging')} draggable\r\n              onDragEnd={(e) => (this.onDragEnd(e, idx, fromListIdx))}\r\n              onDragStart={(e) => (this.onDragStart(e, idx, fromListIdx))}  key={ele.id}>\r\n              {ele.title}\r\n            </a>\r\n          )\r\n        )}\r\n        {isDragOver &&\r\n          <div className=\"card dragOver\"></div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nCards.propTypes = {\r\n  cards: PropTypes.array,\r\n  fromListIdx: PropTypes.number,\r\n  dropCard: PropTypes.func,\r\n  dragLeave: PropTypes.func,\r\n  isDragOver: PropTypes.bool,\r\n  dragEnter: PropTypes.func,\r\n  dropCard: PropTypes.func,\r\n};\r\n\r\nexport default Cards;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Cards from '../Cards/Cards';\r\nimport AddComponent from '../AddComponent/AddComponent';\r\n\r\nclass List extends Component {\r\n  render(){\r\n    const { lists, addCard, toggleForm, dragStart, dragEnd, dragEnter, dropCard } = this.props;\r\n    return (\r\n      lists.map((ele, idx) =>\r\n        (<div key={ele.id} className=\"column\">\r\n          <div className=\"content\">\r\n            <div className=\"title\">\r\n              <h3 className=\"pull-left\">{ele.name}</h3>\r\n              <span className=\"pull-right\">{ele.cardCount}</span>\r\n            </div>\r\n            <Cards fromListIdx={idx} isDragOver={ele.isDragOver} cards={ele.cards || []} dragStart={(id, pid) => dragStart(id, pid)}\r\n              dragEnd={(id, pid) => dragEnd(id, pid)} dragEnter={(id) => dragEnter(id)}  dropCard={(id, prevPid, newPid) => dropCard(id, prevPid, newPid)} />\r\n            <AddComponent isFromList={true} isShowForm={ele.showAddCardForm}\r\n              onAddClick={(val) => addCard(val, ele.id)} onToggleForm={() => toggleForm(ele.id)} />\r\n          </div>\r\n        </div>)\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nList.propTypes = {\r\n  lists: PropTypes.array,\r\n  addCard: PropTypes.func,\r\n  toggleForm: PropTypes.func,\r\n  dragStart: PropTypes.func,\r\n  dragEnd: PropTypes.func,\r\n  dragEnter: PropTypes.func,\r\n  dropCard: PropTypes.func,\r\n};\r\n\r\nexport default List;\r\n","\r\nexport const TOGGLE_CARD_FORM = 'TOGGLE_CARD_FORM';\r\nexport const TOGGLE_LIST_FORM = 'TOGGLE_LIST_FORM';\r\nexport const ADD_CARD = 'ADD_CARD';\r\nexport const ADD_LIST = 'ADD_LIST';\r\nexport const DRAG_START = 'DRAG_START';\r\nexport const DRAG_END = 'DRAG_END';\r\nexport const DRAG_ENTER = 'DRAG_ENTER';\r\nexport const DROP_CARD = 'DROP_CARD';\r\n","import {\r\n  TOGGLE_CARD_FORM,\r\n  ADD_CARD,\r\n  ADD_LIST,\r\n  TOGGLE_LIST_FORM,\r\n  DRAG_START,\r\n  DRAG_END,\r\n  DRAG_ENTER,\r\n  DROP_CARD,\r\n} from '../constants/actionTypes.js';\r\n\r\nlet nextListId = 3;\r\nlet nextCardId = 0;\r\n\r\nexport const toggleForm = (id) => (\r\n  {\r\n    type: TOGGLE_CARD_FORM,\r\n    id\r\n  }\r\n);\r\n\r\nexport const addCard = (payload, id) => (\r\n  {\r\n    type: ADD_CARD,\r\n    payload,\r\n    id,\r\n    cid: nextCardId++\r\n  }\r\n);\r\n\r\nexport const toggleListForm = () => (\r\n  {\r\n    type: TOGGLE_LIST_FORM\r\n  }\r\n);\r\n\r\nexport const addList = payload => (\r\n   {\r\n      type: ADD_LIST,\r\n      id: nextListId++,\r\n      payload\r\n    }\r\n);\r\n\r\nexport const dragStart = (id, pid) => (\r\n  {\r\n    type: DRAG_START,\r\n    id,\r\n    pid\r\n  }\r\n);\r\n\r\nexport const dragEnd = (id, pid) => (\r\n  {\r\n    type: DRAG_END,\r\n    id,\r\n    pid\r\n  }\r\n);\r\n\r\nexport const dragEnter = (id) => (\r\n  {\r\n    type: DRAG_ENTER,\r\n    id\r\n  }\r\n);\r\n\r\nexport const dropCard = (id, prevPid, newPid) => (\r\n  {\r\n    type: DROP_CARD,\r\n    id,\r\n    prevPid,\r\n    newPid\r\n  }\r\n);\r\n","import React, { Component } from 'react';\r\nimport List from '../../components/List/List';\r\nimport { connect } from 'react-redux';\r\nimport { toggleForm, addCard, dragStart, dropCard, dragEnter, dragEnd } from '../../actions';\r\n\r\nexport class ListCont extends Component {\r\n  render(){\r\n      return <List {...this.props} />\r\n  }\r\n}\r\n\r\nexport const mapStateToProps = store => {\r\n  return {\r\n    lists: store.lists\r\n  }\r\n};\r\n\r\nexport const mapDispatchToProps = dispatch => {\r\n    return {\r\n        toggleForm: (id) => {\r\n            dispatch(toggleForm(id));\r\n        },\r\n        addCard: (payload, id) => {\r\n            dispatch(addCard(payload, id));\r\n        },\r\n        dragStart: (id, pid) => {\r\n            dispatch(dragStart(id, pid));\r\n        },\r\n        dragEnd: (id, pid) => {\r\n            dispatch(dragEnd(id, pid));\r\n        },\r\n        dragEnter: (id) => {\r\n            dispatch(dragEnter(id));\r\n        },\r\n        dropCard: (id, prevPid, newPid) => {\r\n            dispatch(dropCard(id, prevPid, newPid));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Grid, Row } from 'react-bootstrap';\r\nimport AddComponent from '../../components/AddComponent/AddComponent';\r\nimport List from '../../containers/List/List';\r\n\r\nclass Board extends Component {\r\n  render() {\r\n    const { showForm, toggleListForm, addList } = this.props;\r\n    return (\r\n      <Grid fluid className=\"board\">\r\n        <Row className=\"show-grid\">\r\n          <List />\r\n          <AddComponent isForNewList={true} isShowForm={showForm} onToggleForm={toggleListForm} onAddClick={addList} />\r\n        </Row>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nBoard.propTypes = {\r\n  showForm: PropTypes.bool,\r\n  toggleListForm: PropTypes.func,\r\n  addList: PropTypes.func,\r\n};\r\n\r\nexport default Board;\r\n","import React, { Component } from 'react';\r\nimport Board from '../../components/Board/Board';\r\nimport { connect } from 'react-redux';\r\nimport { toggleListForm, addList } from '../../actions';\r\n\r\nexport class BoardCont extends Component {\r\n  render(){\r\n      return <Board {...this.props} />\r\n  }\r\n}\r\n\r\nexport const mapStateToProps = store => {\r\n  return {\r\n    showForm: store.newlist\r\n  }\r\n}\r\n\r\nexport const mapDispatchToProps = dispatch => {\r\n    return {\r\n        toggleListForm: () => {\r\n            dispatch(toggleListForm());\r\n        },\r\n        addList: (payload) => {\r\n            dispatch(addList(payload));\r\n            dispatch(toggleListForm());\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Board);\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Board from './containers/Board/Board';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n          <Board />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\n\r\nimport lists from \"./lists\";\r\nimport newlist from './newlist';\r\n\r\nexport default combineReducers({ lists, newlist });\r\n","import {\r\n  TOGGLE_CARD_FORM,\r\n  ADD_CARD,\r\n  ADD_LIST,\r\n  DRAG_START,\r\n  DRAG_END,\r\n  DRAG_ENTER,\r\n  DROP_CARD,\r\n} from '../constants/actionTypes';\r\n\r\nexport default function reducer(state = [], action){\r\n\r\n    switch (action.type) {\r\n      case TOGGLE_CARD_FORM:\r\n          return state.map((ele) =>\r\n            (ele.id === action.id) ? {...ele, showAddCardForm: !ele.showAddCardForm} : ele\r\n          );\r\n      case ADD_CARD:\r\n          return state.map((ele) => {\r\n            if(ele.id === action.id){\r\n              ele.cards.push({id:action.cid, title: action.payload, desc:'', isDragging: false});\r\n              ele.cardCount++;\r\n              ele.showAddCardForm = !ele.showAddCardForm;\r\n            }\r\n            return ele;\r\n          });\r\n      case ADD_LIST:\r\n          return [...state, {\r\n                              id:action.id, name: action.payload, showAddCardForm: false, isDragOver: false, cards:[], cardCount: 0\r\n                            }]\r\n      case DRAG_START:\r\n          return state.map((ele, index) => {\r\n            if(index === action.pid){\r\n              let cards = ele.cards;\r\n              cards[action.id].isDragging = true\r\n            }\r\n            return ele;\r\n          });\r\n      case DRAG_END:\r\n          return state.map((ele, index) => {\r\n            ele.isDragOver = false;\r\n            if(index === action.pid){\r\n              let cards = ele.cards;\r\n              cards[action.id].isDragging = false\r\n            }\r\n            return ele;\r\n          });\r\n      case DRAG_ENTER:\r\n          return state.map((ele, idx) => {\r\n            ele.isDragOver = false;\r\n            if(idx === action.id){\r\n              ele.isDragOver = true;\r\n            }\r\n            return ele;\r\n          });\r\n      case DROP_CARD:\r\n        let prev = state[action.prevPid];\r\n        prev.isDragOver = false;\r\n        prev.cardCount--;\r\n        let card = prev.cards.splice(action.id, 1)[0];\r\n        card.isDragging = false\r\n\r\n        return state.map((ele, index) => {\r\n          if(index === action.newPid){\r\n            ele.cards.push(card);\r\n            ele.isDragOver = false;\r\n            ele.cardCount++;\r\n          }\r\n          return ele;\r\n        });\r\n      default:\r\n          return state;\r\n    }\r\n}\r\n","import { TOGGLE_LIST_FORM } from '../constants/actionTypes';\r\n\r\nexport default function reducer(state=false, action){\r\n  switch (action.type) {\r\n    case TOGGLE_LIST_FORM:\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore } from \"redux\";\r\nimport reducer from \"./reducers\";\r\n\r\nconst initialState = {\r\n  lists: [\r\n    {id: 0, name: \"Todo\", showAddCardForm: false, isDragOver: false, cards:[], cardCount: 0},\r\n    {id: 1, name: \"Doing\", showAddCardForm: false, isDragOver: false, cards:[], cardCount: 0},\r\n    {id: 2, name: \"Done\", showAddCardForm: false, isDragOver: false, cards:[], cardCount: 0}\r\n  ]\r\n};\r\n//{id: 1, title: 'card1d', desc: '', isDragging: false}\r\nlet store = createStore(reducer, initialState);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>,\n  document.getElementById('root'));\n\n//ReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}