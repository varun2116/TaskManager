{"version":3,"sources":["components/AddComponent/AddComponent.js","components/AddComponent/constants.js","components/CardModal/CardModal.js","components/Cards/Cards.js","components/List/List.js","constants/actionTypes.js","actions/index.js","containers/List/List.js","components/Board/Board.js","containers/Board/Board.js","App.js","reducers/index.js","reducers/lists.js","reducers/newlist.js","store.js","index.js"],"names":["AddComponent","_this$props","this","props","isFromList","isShowForm","onToggleForm","onAddClick","inVal","refs","cardInpt","react_default","a","createElement","className","href","onClick","type","ref","Button","bsStyle","value","Component","CardModal","clickHandler","e","_this","editTitle","payload","id","title","desc","editDesc","editModal","fromList","_this2","isEditable","toggleModal","deleteModal","Modal","show","onHide","Header","closeButton","Title","Body","defaultValue","preventDefault","Cards","onDragStart","pid","dataTransfer","dropEffect","effectAllowed","setData","dragStart","onDragEnd","dragEnd","onDrop","dropCard","getData","fromListIdx","dragEnter","cards","isDragOver","onDragOver","onDragEnter","map","ele","idx","key","isDragging","draggable","components_CardModal_CardModal","Object","assign","List","lists","addCard","toggleForm","name","cardCount","components_Cards_Cards","prevPid","newPid","components_AddComponent_AddComponent","showAddCardForm","val","TOGGLE_CARD_FORM","TOGGLE_LIST_FORM","ADD_CARD","ADD_LIST","DRAG_START","DRAG_END","DRAG_ENTER","DROP_CARD","TOGGLE_MODAL","EDIT_CARD","DELETE_CARD","nextListId","nextCardId","toggleListForm","connect","store","dispatch","cid","Board","showForm","addList","Grid","fluid","Row","containers_List_List","isForNewList","newlist","App","containers_Board_Board","combineReducers","state","arguments","length","undefined","action","objectSpread","push","toConsumableArray","concat","index","prev","card","splice","prnt","createStore","reducer","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.aa8164d3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'react-bootstrap';\r\nimport './AddComponent.css';\r\nimport { LIST_ADD, CARD_ADD } from './constants';\r\n\r\nclass AddComponent extends Component {\r\n  render(){\r\n    const { isFromList, isShowForm, onToggleForm, onAddClick, } = this.props;\r\n    let inVal = this.refs.cardInpt;\r\n    return (\r\n      <div className=\"column\">\r\n        <div className=\"content\">\r\n          <div className={\"linkWrapper \" + (isShowForm && 'hide')}>\r\n            <a href=\"#\" onClick={() => (onToggleForm()) }>{!isFromList && LIST_ADD}{isFromList && CARD_ADD}</a>\r\n          </div>\r\n          <div className={\"formWrapper \" + (!isShowForm && 'hide')}>\r\n            <form className=\"form\">\r\n              <div className=\"form-group\">\r\n                <input type=\"text\" ref=\"cardInpt\" className=\"form-control\" />\r\n              </div>\r\n              <Button bsStyle=\"primary\" className=\"pull-left\" onClick={() => { inVal.value !== \"\" && onAddClick(inVal.value); inVal.value = \"\"}}>Add List</Button>\r\n              <Button bsStyle=\"danger\" className=\"pull-right\" onClick={() => (onToggleForm()) }>Cancel</Button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nAddComponent.propTypes = {\r\n  isFromList: PropTypes.bool,\r\n  isShowForm: PropTypes.bool,\r\n  onToggleForm: PropTypes.func,\r\n  onAddClick: PropTypes.func,\r\n};\r\n\r\nexport default AddComponent;\r\n","export const LIST_ADD = \"Add New List\";\r\nexport const CARD_ADD = \"Add New Card\";\r\n","import React, { Component } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass CardModal extends Component {\r\n  clickHandler = (e) => {\r\n    if(this.refs.editTitle.value !== \"\"){\r\n      let payload = {id:this.props.id, title: this.refs.editTitle.value, desc: this.refs.editDesc.value};\r\n      return this.props.editModal(this.props.fromList,payload);\r\n    }\r\n  }\r\n  render() {\r\n    const { id, title, desc, isEditable, fromList, toggleModal, deleteModal } = this.props;\r\n    return (\r\n      <Modal show={isEditable} onHide={(e) => (toggleModal(id, fromList))}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{title} Details</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <form className=\"form\">\r\n            <div className=\"form-group\">\r\n              <label>Title</label>\r\n              <input type=\"text\" ref=\"editTitle\" className=\"form-control\" defaultValue={title} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Description</label>\r\n              <textarea type=\"text\" ref=\"editDesc\" className=\"form-control\" defaultValue={desc}></textarea>\r\n            </div>\r\n            <div className=\"form-group text-center\">\r\n              <Button bsStyle=\"primary\" className=\"m10\" onClick={(e) => {this.clickHandler(e)}}>Edit</Button>\r\n              <Button bsStyle=\"danger\" className=\"m10\" onClick={(e) => {e.preventDefault(); return deleteModal(fromList)}}>Delete</Button>\r\n            </div>\r\n          </form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nCardModal.propTypes = {\r\n  id: PropTypes.number,\r\n  title: PropTypes.string,\r\n  desc: PropTypes.string,\r\n  isEditable: PropTypes.bool,\r\n  fromList: PropTypes.number,\r\n  toggleModal: PropTypes.func,\r\n  editModal: PropTypes.func,\r\n}\r\n\r\nexport default CardModal;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CardModal from '../CardModal/CardModal';\r\n\r\nclass Cards extends Component {\r\n  onDragStart = (e, id, pid) => {\r\n    e.dataTransfer.dropEffect = 'copy';\r\n    e.dataTransfer.effectAllowed = 'copyMove';\r\n    e.dataTransfer.setData(\"id\", id);\r\n    e.dataTransfer.setData(\"prevPid\", pid);\r\n    this.props.dragStart(id, pid);\r\n  }\r\n\r\n  onDragEnd = (e, id, pid) => {\r\n    this.props.dragEnd(id, pid);\r\n  }\r\n\r\n  onDrop = (e) => {\r\n    //alert('same')\r\n    this.props.dropCard(e.dataTransfer.getData(\"id\"), e.dataTransfer.getData(\"prevPid\"), this.props.fromListIdx);\r\n  }\r\n\r\n  dragEnter = (e) => {\r\n    this.props.dragEnter(this.props.fromListIdx);\r\n  }\r\n\r\n  render() {\r\n    const { cards, fromListIdx, isDragOver, toggleModal, editModal, deleteModal } = this.props;\r\n    return (\r\n      <div className=\"cards\" onDragOver={(e) => (e.preventDefault())} onDrop={(e) => (this.onDrop(e))}\r\n        onDragEnter={(e) => (this.dragEnter(e))}>\r\n        {cards.map((ele, idx) =>\r\n          (\r\n            <div key={ele.id}>\r\n              <a className={\"card \" + (ele.isDragging && 'dragging')} draggable\r\n                onDragEnd={(e) => (this.onDragEnd(e, idx, fromListIdx))}\r\n                onDragStart={(e) => (this.onDragStart(e, idx, fromListIdx))}\r\n                onClick={(e) => {e.preventDefault(); return toggleModal(ele.id, fromListIdx)}}\r\n                key={ele.id}>\r\n                  <div className=\"title\">{ele.title}</div>\r\n              </a>\r\n              <CardModal {...ele} fromList={fromListIdx} toggleModal={(id, pid) => (toggleModal(id, pid))}\r\n                editModal={(pid, payload) => (editModal(pid, payload))}\r\n                deleteModal={(pid) => (deleteModal(pid, idx))} />\r\n            </div>\r\n          )\r\n        )}\r\n        {isDragOver &&\r\n          <div className=\"card dragOver\"></div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nCards.propTypes = {\r\n  cards: PropTypes.array,\r\n  fromListIdx: PropTypes.number,\r\n  dropCard: PropTypes.func,\r\n  dragLeave: PropTypes.func,\r\n  isDragOver: PropTypes.bool,\r\n  dragEnter: PropTypes.func,\r\n  toggleModal: PropTypes.func,\r\n  editModal: PropTypes.func,\r\n  deleteModal: PropTypes.func,\r\n};\r\n\r\nexport default Cards;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Cards from '../Cards/Cards';\r\nimport AddComponent from '../AddComponent/AddComponent';\r\n\r\nclass List extends Component {\r\n  render(){\r\n    const {\r\n      lists,\r\n      addCard,\r\n      toggleForm,\r\n      dragStart,\r\n      dragEnd,\r\n      dragEnter,\r\n      dropCard,\r\n      toggleModal,\r\n      editModal,\r\n      deleteModal\r\n    } = this.props;\r\n    return (\r\n      lists.map((ele, idx) =>\r\n        (<div key={ele.id} className=\"column\">\r\n          <div className=\"content\">\r\n            <div className=\"listHead\">\r\n              <div className=\"title\">{ele.name}</div>\r\n              <span className=\"pull-right\">{ele.cardCount}</span>\r\n            </div>\r\n            <Cards fromListIdx={idx} isDragOver={ele.isDragOver} cards={ele.cards || []} dragStart={(id, pid) => dragStart(id, pid)}\r\n              dragEnd={(id, pid) => dragEnd(id, pid)} dragEnter={(id) => dragEnter(id)}  dropCard={(id, prevPid, newPid) => dropCard(id, prevPid, newPid)}\r\n              toggleModal={(id, pid) => toggleModal(id, pid)} editModal={(pid, payload) => editModal(pid, payload)}\r\n              deleteModal={(pid, id) => deleteModal(pid, id)} />\r\n            <AddComponent isFromList={true} isShowForm={ele.showAddCardForm}\r\n              onAddClick={(val) => addCard(val, ele.id)} onToggleForm={() => toggleForm(ele.id)} />\r\n          </div>\r\n        </div>)\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nList.propTypes = {\r\n  lists: PropTypes.array,\r\n  addCard: PropTypes.func,\r\n  toggleForm: PropTypes.func,\r\n  dragStart: PropTypes.func,\r\n  dragEnd: PropTypes.func,\r\n  dragEnter: PropTypes.func,\r\n  dropCard: PropTypes.func,\r\n  toggleModal: PropTypes.func,\r\n  editModal: PropTypes.func,\r\n  deleteModal: PropTypes.func,\r\n};\r\n\r\nexport default List;\r\n","\r\nexport const TOGGLE_CARD_FORM = 'TOGGLE_CARD_FORM';\r\nexport const TOGGLE_LIST_FORM = 'TOGGLE_LIST_FORM';\r\nexport const ADD_CARD = 'ADD_CARD';\r\nexport const ADD_LIST = 'ADD_LIST';\r\nexport const DRAG_START = 'DRAG_START';\r\nexport const DRAG_END = 'DRAG_END';\r\nexport const DRAG_ENTER = 'DRAG_ENTER';\r\nexport const DROP_CARD = 'DROP_CARD';\r\nexport const TOGGLE_MODAL = 'TOGGLE_MODAL';\r\nexport const EDIT_CARD = 'EDIT_CARD';\r\nexport const DELETE_CARD = 'DELETE_CARD';\r\n","import {\r\n  TOGGLE_CARD_FORM,\r\n  ADD_CARD,\r\n  ADD_LIST,\r\n  TOGGLE_LIST_FORM,\r\n  DRAG_START,\r\n  DRAG_END,\r\n  DRAG_ENTER,\r\n  DROP_CARD,\r\n  TOGGLE_MODAL,\r\n  EDIT_CARD,\r\n  DELETE_CARD,\r\n} from '../constants/actionTypes.js';\r\n\r\nlet nextListId = 3;\r\nlet nextCardId = 0;\r\n\r\nexport const toggleForm = (id) => (\r\n  {\r\n    type: TOGGLE_CARD_FORM,\r\n    id\r\n  }\r\n);\r\n\r\nexport const addCard = (payload, id) => (\r\n  {\r\n    type: ADD_CARD,\r\n    payload,\r\n    id,\r\n    cid: nextCardId++\r\n  }\r\n);\r\n\r\nexport const toggleListForm = () => (\r\n  {\r\n    type: TOGGLE_LIST_FORM\r\n  }\r\n);\r\n\r\nexport const addList = payload => (\r\n   {\r\n      type: ADD_LIST,\r\n      id: nextListId++,\r\n      payload\r\n    }\r\n);\r\n\r\nexport const dragStart = (id, pid) => (\r\n  {\r\n    type: DRAG_START,\r\n    id,\r\n    pid\r\n  }\r\n);\r\n\r\nexport const dragEnd = (id, pid) => (\r\n  {\r\n    type: DRAG_END,\r\n    id,\r\n    pid\r\n  }\r\n);\r\n\r\nexport const dragEnter = (id) => (\r\n  {\r\n    type: DRAG_ENTER,\r\n    id\r\n  }\r\n);\r\n\r\nexport const dropCard = (id, prevPid, newPid) => (\r\n  {\r\n    type: DROP_CARD,\r\n    id,\r\n    prevPid,\r\n    newPid\r\n  }\r\n);\r\n\r\nexport const toggleModal = (id, pid) => (\r\n  {\r\n    type: TOGGLE_MODAL,\r\n    id,\r\n    pid\r\n  }\r\n);\r\n\r\nexport const editModal = (pid, payload) => (\r\n  {\r\n    type: EDIT_CARD,\r\n    pid,\r\n    payload\r\n  }\r\n);\r\n\r\nexport const deleteModal = (pid, id) => (\r\n  {\r\n    type: DELETE_CARD,\r\n    pid,\r\n    id\r\n  }\r\n)\r\n","import React, { Component } from 'react';\r\nimport List from '../../components/List/List';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  toggleForm,\r\n  addCard,\r\n  dragStart,\r\n  dropCard,\r\n  dragEnter,\r\n  dragEnd,\r\n  toggleModal,\r\n  editModal,\r\n  deleteModal\r\n} from '../../actions';\r\n\r\nexport class ListCont extends Component {\r\n  render(){\r\n      return <List {...this.props} />\r\n  }\r\n}\r\n\r\nexport const mapStateToProps = store => {\r\n  return {\r\n    lists: store.lists\r\n  }\r\n};\r\n\r\nexport const mapDispatchToProps = dispatch => {\r\n    return {\r\n        toggleForm: (id) => {\r\n            dispatch(toggleForm(id));\r\n        },\r\n        addCard: (payload, id) => {\r\n            dispatch(addCard(payload, id));\r\n        },\r\n        dragStart: (id, pid) => {\r\n            dispatch(dragStart(id, pid));\r\n        },\r\n        dragEnd: (id, pid) => {\r\n            dispatch(dragEnd(id, pid));\r\n        },\r\n        dragEnter: (id) => {\r\n            dispatch(dragEnter(id));\r\n        },\r\n        dropCard: (id, prevPid, newPid) => {\r\n            dispatch(dropCard(id, prevPid, newPid));\r\n        },\r\n        toggleModal: (id, pid) => {\r\n            dispatch(toggleModal(id, pid));\r\n        },\r\n        editModal: (pid, payload) => {\r\n            dispatch(editModal(pid, payload));\r\n        },\r\n        deleteModal: (pid, id) => {\r\n            dispatch(toggleModal(id, pid));\r\n            dispatch(deleteModal(pid, id));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Grid, Row } from 'react-bootstrap';\r\nimport AddComponent from '../../components/AddComponent/AddComponent';\r\nimport List from '../../containers/List/List';\r\n\r\nclass Board extends Component {\r\n  render() {\r\n    const { showForm, toggleListForm, addList } = this.props;\r\n    return (\r\n      <Grid fluid className=\"board\">\r\n        <Row className=\"show-grid\">\r\n          <List />\r\n          <AddComponent isForNewList={true} isShowForm={showForm} onToggleForm={toggleListForm} onAddClick={addList} />\r\n        </Row>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nBoard.propTypes = {\r\n  showForm: PropTypes.bool,\r\n  toggleListForm: PropTypes.func,\r\n  addList: PropTypes.func,\r\n};\r\n\r\nexport default Board;\r\n","import React, { Component } from 'react';\r\nimport Board from '../../components/Board/Board';\r\nimport { connect } from 'react-redux';\r\nimport { toggleListForm, addList } from '../../actions';\r\n\r\nexport class BoardCont extends Component {\r\n  render(){\r\n      return <Board {...this.props} />\r\n  }\r\n}\r\n\r\nexport const mapStateToProps = store => {\r\n  return {\r\n    showForm: store.newlist\r\n  }\r\n}\r\n\r\nexport const mapDispatchToProps = dispatch => {\r\n    return {\r\n        toggleListForm: () => {\r\n            dispatch(toggleListForm());\r\n        },\r\n        addList: (payload) => {\r\n            dispatch(addList(payload));\r\n            dispatch(toggleListForm());\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Board);\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Board from './containers/Board/Board';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n          <h3 className=\"text-center\">Task manager</h3>\r\n          <Board />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport lists from \"./lists\";\r\nimport newlist from './newlist';\r\n\r\nexport default combineReducers({ lists, newlist });\r\n","import {\r\n  TOGGLE_CARD_FORM,\r\n  ADD_CARD,\r\n  ADD_LIST,\r\n  DRAG_START,\r\n  DRAG_END,\r\n  DRAG_ENTER,\r\n  DROP_CARD,\r\n  TOGGLE_MODAL,\r\n  EDIT_CARD,\r\n  DELETE_CARD,\r\n} from '../constants/actionTypes';\r\n\r\nexport default function reducer(state = [], action){\r\n\r\n    switch (action.type) {\r\n      case TOGGLE_CARD_FORM:\r\n          return state.map((ele) =>\r\n            (ele.id === action.id) ? {...ele, showAddCardForm: !ele.showAddCardForm} : ele\r\n          );\r\n      case ADD_CARD:\r\n          return state.map((ele) => {\r\n            if(ele.id === action.id){\r\n              ele.cards.push({id:action.cid, title: action.payload, desc:'', isEditable:false, isDragging: false});\r\n              ele.cardCount++;\r\n              ele.showAddCardForm = false;\r\n            }\r\n            return ele;\r\n          });\r\n      case ADD_LIST:\r\n          return [...state, {\r\n                              id:action.id, name: action.payload, showAddCardForm: false, isDragOver: false, cards:[], cardCount: 0\r\n                            }]\r\n      case DRAG_START:\r\n          return state.map((ele, index) => {\r\n            if(index === action.pid){\r\n              let cards = ele.cards;\r\n              cards[action.id].isDragging = true\r\n            }\r\n            return ele;\r\n          });\r\n      case DRAG_END:\r\n          return state.map((ele, index) => {\r\n            ele.isDragOver = false;\r\n            if(index === action.pid){\r\n              let cards = ele.cards;\r\n              cards[action.id].isDragging = false\r\n            }\r\n            return ele;\r\n          });\r\n      case DRAG_ENTER:\r\n          return state.map((ele, idx) => {\r\n            ele.isDragOver = false;\r\n            if(idx === action.id){\r\n              ele.isDragOver = true;\r\n            }\r\n            return ele;\r\n          });\r\n      case DROP_CARD:\r\n        let prev = state[action.prevPid];\r\n        prev.isDragOver = false;\r\n        prev.cardCount--;\r\n        let card = prev.cards.splice(action.id, 1)[0];\r\n        card.isDragging = false\r\n\r\n        return state.map((ele, index) => {\r\n          if(index === action.newPid){\r\n            ele.cards.push(card);\r\n            ele.isDragOver = false;\r\n            ele.cardCount++;\r\n          }\r\n          return ele;\r\n        });\r\n      case TOGGLE_MODAL:\r\n        return state.map((ele, idx) => {\r\n          if(idx === action.pid){\r\n            ele.cards.map((card) => {\r\n              if(card.id === action.id){\r\n                card.isEditable = !card.isEditable\r\n              }\r\n              return card;\r\n            });\r\n          }\r\n          return ele;\r\n        });\r\n      case EDIT_CARD:\r\n        return state.map((ele, idx) => {\r\n          if(idx === action.pid){\r\n            ele.cards.map((card) => {\r\n              if(card.id === action.payload.id) {\r\n                card.title = action.payload.title;\r\n                card.desc = action.payload.desc;\r\n                card.isEditable = false;\r\n              }\r\n              return card;\r\n            });\r\n          }\r\n          return ele;\r\n        });\r\n      case DELETE_CARD:\r\n        let prnt = state[action.pid];\r\n        prnt.cardCount--;\r\n        prnt.cards.splice(action.id, 1);\r\n        return state;\r\n      default:\r\n          return state;\r\n    }\r\n}\r\n","import { TOGGLE_LIST_FORM } from '../constants/actionTypes';\r\n\r\nexport default function reducer(state=false, action){\r\n  switch (action.type) {\r\n    case TOGGLE_LIST_FORM:\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore } from \"redux\";\r\nimport reducer from \"./reducers\";\r\n\r\nconst initialState = {\r\n  lists: [\r\n    {id: 0, name: \"Todo\", showAddCardForm: false, isDragOver: false, cards:[], cardCount: 0},\r\n    {id: 1, name: \"Doing\", showAddCardForm: false, isDragOver: false, cards:[], cardCount: 0},\r\n    {id: 2, name: \"Done\", showAddCardForm: false, isDragOver: false, cards:[], cardCount: 0}\r\n  ]\r\n};\r\n//{id: 1, title: 'card1d', desc: '', isEditable:false, isDragging: false}\r\nlet store = createStore(reducer, initialState);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n      <App />\r\n  </Provider>,\r\n  document.getElementById('root'));\r\n\r\n//ReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}